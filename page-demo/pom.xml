<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.learn</groupId>
	<artifactId>page-demo</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>page-demo</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		 <!-- MyBatis Generator  -->
        <!--  Java接口和实体类  -->
        <targetJavaProject>${basedir}/src/main/java</targetJavaProject>
        <targetMapperPackage>com.isea533.mybatis.mapper</targetMapperPackage>
        <targetModelPackage>com.isea533.mybatis.model</targetModelPackage>
        <!--  XML生成路径  -->
        <targetResourcesProject>${basedir}/src/main/resources</targetResourcesProject>
        <targetXMLPackage>mapper</targetXMLPackage>
        <!--  编译jdk版本  -->
        <jdk.version>1.7</jdk.version>
        <!--  依赖版本  -->
		<spring.version>4.2.5.RELEASE</spring.version>
		<junit.version>4.12</junit.version>
		<fastjson.version>1.2.8</fastjson.version>
		<log4j.version>1.2.17</log4j.version>
		<slf4j.version>1.7.19</slf4j.version>
		<aspectjweaver.version>1.8.8</aspectjweaver.version>
		<jstl.version>1.2</jstl.version>
		<taglibs.version>1.1.2</taglibs.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<jackson.version>2.7.4</jackson.version>
		<commons.lang3.version>3.3.2</commons.lang3.version>
		<commons.fileupload.version>1.3.1</commons.fileupload.version>
		<commons.collections.version>3.2.1</commons.collections.version>
		<commons.io.version>2.4</commons.io.version>
		<mysql.version>5.1.38</mysql.version>
		<mybatis.version>3.4.0</mybatis.version>
		<mybatis.spring.version>1.3.0</mybatis.spring.version>
		<druid.version>1.0.20</druid.version>
	</properties>
	<dependencies>
		<!--common start -->

		<!-- Log start -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- Log end -->

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang3.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>

		<!-- FileUpload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons.fileupload.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons.collections.version}</version>
		</dependency>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- AOP -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<!--common end -->
		<!--Severlet Web 相关依赖 start -->
		<!--2个标签库 -->
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>${taglibs.version}</version>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet.version}</version>
		</dependency>
		<!--Severlet Web 相关依赖 end -->
		<!-- spring依赖 start -->
		<!--1)spring核心依赖 start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--1)spring核心依赖 end -->
		
        <!--2)spring dao层依赖 start -->       
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
        <!--2)spring dao层依赖 end -->    
        
        <!--3)spring AOP依赖 start -->    
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>     
		<!--3)spring AOP依赖 end -->   

        <!-- 4)spring test相关依赖 start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
        <!-- 4)spring test相关依赖 end -->

		<!--5)spring web相关依赖 start -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!--5)spring web相关依赖 end -->
		<!-- spring依赖 end -->
		
		<!-- 数据库相关依赖 start  -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
	        <groupId>com.alibaba</groupId>
	        <artifactId>druid</artifactId>
	        <version>${druid.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis.spring.version}</version>
		</dependency>
		
	</dependencies>
	<build>
		<finalName>page-demo</finalName>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>${project.basedir}/src/main/resources</directory>
				<includes>
					<include>*.properties</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
			
				<!-- maven测试用例插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skipTests>true</skipTests><!-- 跳过测试用例 -->
					</configuration>
				</plugin>
				
				<!-- maven编译源码插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
						<source>${jdk.version}</source><!-- 源代码使用的开发版本 -->
						<target>${jdk.version}</target><!-- 需要生成的目标class文件的编译版本 -->
						<encoding>UTF-8</encoding>
						<testIncludes>
							<testInclude>none</testInclude>
						</testIncludes>
						<includes>
							<include>**/*.*</include>
						</includes>
					</configuration>
				</plugin>
				
				<!-- maven jetty服务器运行插件 -->
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.4.0.v20161208</version>
					<configuration>
						<httpConnector><!-- 链接配置 -->
							<port>8080</port><!-- 默认8080端口 -->
						</httpConnector>
						<webApp>
							<contextPath>/page-demo</contextPath>
						</webApp>
					</configuration>
				</plugin>
				
				<!-- maven mybatis generator 代码自动生成器插件 -->
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>1.3.5</version>
	                <configuration>
	                    <configurationFile>${basedir}/src/main/resources/generatorConfig.xml</configurationFile>
	                    <jdbcDriver>com.mysql.jdbc.Driver</jdbcDriver>
	                    <jdbcURL>jdbc:mysql://localhost:3306/page_demo</jdbcURL>
	                </configuration>
	                <dependencies>
	                    <dependency>
	                        <groupId>mysql</groupId>
	                        <artifactId>mysql-connector-java</artifactId>
	                        <version>${mysql.version}</version>
	                    </dependency>
	                    <dependency>  
	                        <groupId>org.mybatis</groupId>  
	                        <artifactId>mybatis</artifactId>  
	                        <version>${mybatis.version}</version>  
	                    </dependency>  
	                </dependencies>
		          	<executions>
		          		<!-- 使maven在代码编译步骤之前执行 mybatis代码自动生成,更新对应的.java 模型 与 .xml mapper -->
			            <execution>
			              <id>Generate MyBatis Artifacts</id>
			              <goals>
			                <goal>generate</goal>
			              </goals>
			            </execution>
		          </executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
